#ifndef _MYSQL_DLL_H_
#define _MYSQL_DLL_H_

#include<windows.h>
#include "mysql.h"
#include "UtilToolDll.h"

#ifdef __cplusplus
/** Macro to start a block of C symbols */
#  define _C_START_           extern "C" {
/** Macro to end a block of C symbols */
#  define _C_END_             }
#else
#  define _C_START_
#  define _C_END_
#endif

#define __DLL_2_
#ifdef	__DLL_2_
#define _DLL_  __declspec(dllexport)
#else
#define _DLL_ __declspec(dllimport)
#endif

_C_START_



#ifndef MzsSql__

enum Type{
	Int = 0,			/*表操作的字段，整数类型*/
	Float = 1,			/*表操作的字段，浮点数类型*/
	Double = 2,
	String = 3,			/*表操作的字段，字符串类型*/
	IntId = 4,			/*表操作的id，整数类型*/
	StringId = 5		/*表操作的id，字符串类型*/
};

typedef struct _DLL_ Field
{
	char*		key;
	char*		value;
	Type        type;
}Field;

#endif



/********************************************************/
/*功能描述：	数据库连接初始化						*/
/*参数说明：	char*		ini配置文件名前面加‘/’	*/
/*返    回：	0为正确，非0为错误码					*/
/********************************************************/
_DLL_ int sql_connect(char*);
/********************************************************/
/*功能描述：	数据库连接关闭							*/
/*返    回：	0为正确，非0为错误码					*/
/********************************************************/
_DLL_ int sql_close();
/********************************************************/
/*功能描述：	数据库连接获取							*/
/*返    回：	MYSQL*									*/
/********************************************************/
_DLL_ MYSQL * get_mysql();

/********************************************************/
/*功能描述：	malloc内存free()释放					*/
/*参数说明：	char** &	返回查询的数据				*/
/*返    回：	0为正确，	非0为错误码					*/
/********************************************************/
_DLL_ int frees(char** &items);
/********************************************************/
/*功能描述：	new []内存delete[]释放					*/
/*参数说明：	char** &	返回查询的数据				*/
/*返    回：	0为正确，	非0为错误码					*/
/********************************************************/
_DLL_ int freea(char** &items);


/********************************************************/
/*功能描述：	创建字段集合							*/
/*参数说明：	Field** &	字段对象总数量				*/
/*参数说明：	int			字段总数量再加1				*/
/*返    回：	0为正确，非0为错误码					*/
/********************************************************/
_DLL_ int new_field(Field** &field, int length);
/********************************************************/
/*功能描述：	初始化字段								*/
/*参数说明：	Field* &	字段对象					*/
/*参数说明：	char*		字段名						*/
/*参数说明：	void*		字段值						*/
/*参数说明：	Type		字段类型					*/
/*返    回：	0为正确，非0为错误码					*/
/********************************************************/
_DLL_ int init_field(Field* &field, char* key, void* value, Type type);
/********************************************************/
/*功能描述：	new []内存delete[]释放					*/
/*参数说明：	Field** &	返回查询的数据				*/
/*返    回：	0为正确，	非0为错误码					*/
/********************************************************/
_DLL_ int free_field(Field** &items);

/********************************************************/
/*功能描述：	增加数据								*/
/*参数说明：	char*		表名						*/
/*				Field**		表数据集合					*/
/*返    回：	0为正确，非0为错误码					*/
/********************************************************/
_DLL_ int insert_data(char* tableName, Field** field);
/********************************************************/
/*功能描述：	删除数据								*/
/*参数说明：	char*		表名						*/
/*				Field*		指定字段					*/
/*返    回：	0为正确，非0为错误码					*/
/********************************************************/
_DLL_ int delete_data(char* tableName, Field* field);
/********************************************************/
/*功能描述：	更新数据								*/
/*参数说明：	char*		表名						*/
/*				Field**		字段集合					*/
/*返    回：	0为正确，非0为错误码					*/
/********************************************************/
_DLL_ int update_data(char* tableName, Field**field);
/********************************************************/
/*功能描述：	数据库连接池初始化						*/
/*参数说明：	char*		表名						*/
/*				Field**&	字段集合					*/
/*返    回：	0为正确，非0为错误码					*/
/********************************************************/
_DLL_ int selete_data(char* tableName, Field**&field);

/********************************************************/
/*功能描述：	数据库表字段查询初版					*/
/*参数说明：	char**&		返回查询的数据，记得frees	*/
/*				char*		表名						*/
/*				char*		表数据ID					*/
/*				char**		查询字段集合				*/
/*返    回：	0为正确，非0为错误码					*/
/********************************************************/
_DLL_ int selete_data_(char**&result, char* tableName, char* id, char**field);

/********************************************************/
/*功能描述：	数据库多表连删							*/
/********************************************************/

/********************************************************/
/*功能描述：	数据库操作回滚							*/
/********************************************************/

/********************************************************/
/*功能描述：	数据库操作提交							*/
/********************************************************/

_C_END_

#endif
